---
name: Set Default Branch Ruleset
on:
  workflow_dispatch:
    inputs:
      enforcement:
        description: 'Ruleset enforcement status: active or disabled'
        required: true
        default: active
permissions:
  contents: read
jobs:
  set-default-ruleset:
    runs-on: ubuntu-latest
    steps:
      - name: Check if actor is repo admin
        id: check-admin
        env:
          GH_TOKEN: ${{ secrets.BRANCH_RULESETS }}
        run: |
          IS_ADMIN=$(gh api "/repos/${{ github.repository }}/collaborators/${{ github.actor }}/permission" \
            --jq '.permission == "admin"')
          if [[ "$IS_ADMIN" != "true" ]]; then
            echo "‚ùå Only repository admins may run this workflow."
            exit 1
          fi
      - name: Build ruleset payload
        env:
          EMERGENCY_BYPASS_IDS: ${{ vars.EMERGENCY_BYPASS_IDS }}
        run: |
          ENF="${{ github.event.inputs.enforcement }}"

          # Construct bypass_actors JSON: only include your IDs when enforcement is disabled
          if [[ "$ENF" == "disabled" ]]; then
            # Split the EMERGENCY_BYPASS_IDS secret into an array
            IFS=' ' read -r -a IDS <<< "$EMERGENCY_BYPASS_IDS"

            BYPASS_JSON=$(jq -n --argjson ids "$(printf '%s\n' "${IDS[@]}" | jq -R . | jq -s .)" \
              '$ids | map({ actor_id:(.|tonumber), actor_type:"User", bypass_mode:"always" })')
          else
            BYPASS_JSON=$(jq -n '[]')
          fi

          # Define required status checks
          STATUS_CHECKS=$(jq -n '{
            type: "required_status_checks",
            parameters: {
              required_status_checks: [{ context: "super-linter" }],
              strict_required_status_checks_policy: true,
              do_not_enforce_on_create: false
            }
          }')

          # Assemble the full ruleset payload
          jq -n \
            --arg name "Default Branch Ruleset" \
            --arg enforcement "$ENF" \
            --argjson status_checks "$STATUS_CHECKS" \
            --argjson bypass_actors "$BYPASS_JSON" \
            '{
              name: $name,
              target: "branch",
              enforcement: $enforcement,
              conditions: {
                ref_name: {
                  include: ["~DEFAULT_BRANCH"],
                  exclude: []
                }
              },
              rules: [
                { type: "required_linear_history" },
                { type: "non_fast_forward" },
                {
                  type: "pull_request",
                  parameters: {
                    allowed_merge_methods: ["merge"],
                    dismiss_stale_reviews_on_push: true,
                    require_code_owner_review: false,
                    require_last_push_approval: false,
                    required_approving_review_count: 1,
                    required_review_thread_resolution: true
                  }
                },
                $status_checks
              ],
              bypass_actors: $bypass_actors
            }' > payload.json
      - name: Apply default branch ruleset
        env:
          GH_TOKEN: ${{ secrets.BRANCH_RULESETS }}
        run: |-
          gh api --method POST \
            -H "Accept: application/vnd.github+json" \
            "/repos/${{ github.repository }}/rulesets" \
            --input payload.json
